#!/bin/bash

DIR_FILE=".rmdir"
title="rM API"
declare rmdir
level=5


if [ -f ./$DIR_FILE ]
then
    rmdir=`cat $DIR_FILE`
else
    # check if relative path creation is possible and confirmed by user
    cwd="." # current directory in which we search for the DIR_FILE file
    mkfifi progress_pipe
    zenity --progress --auto-close --auto-kill --title "Suche in Unterverzeichnissen nach \".rmdir\"" < progress_pipe
    for (( i=1; i<=$level; i++ ))
    do
        cwd=$cwd/..
        if [ -f "$cwd/$DIR_FILE" ]
        then
            pwd_diff=${PWD#`realpath $cwd`}
            rmdir="`cat $cwd/$DIR_FILE`$pwd_diff"
            ! ( `zenity --question --title "Relative Pfad" --ellipsize --text "Keine \"$DIR_FILE\" Datei im aktuellen Verzeichnis gefunden.\n\nRelativ ermittelten Pfad \"$rmdir\" verwenden?"` ) && unset rmdir
            echo 100 > progress_pipe
            break
        fi
        echo $(($i/$level * 100)) > progress_pipe
    done
    rm progress_pipe
    
    # get custom user input path
    if [ -z $rmdir ]
    then
        if ! rmdir=`zenity --forms --add-entry "Ordner auf reMarkable:" --title "$title" --text "Gib den Ordner auf dem reMarkable an"`
        then
            exit;
        fi

        # and maybe save it
        if zenity --question --text="Auswahl fÃ¼r den aktuellen Ordner speichern?"
        then
            echo $rmdir > $DIR_FILE
        fi
    fi
fi

# upload files

# simulate rmapi mkdir -p $rmdir
traversed=""
IFS="/"
for i in ${rmdir#/}
do
	traversed="$traversed/$i"
	rmapi mkdir "$traversed"
done



IFS=$'\n'
for file in $NEMO_SCRIPT_SELECTED_FILE_PATHS
do
    rmapi put "$file" "$rmdir"
done 2>&1 | zenity --text-info --title "$title"
