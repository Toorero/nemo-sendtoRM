#!/bin/bash

DIR_FILE=".rmdir"
# subdirs are not going to be added to relative path
IGNORE_FILE=".rmignore"
TITLE="rM API"
declare rmdir
MAX_LEVEL=5

SELECTED_FILE_PATHS="${NEMO_SCRIPT_SELECTED_FILE_PATHS:-$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS}"

if [ -f "./$DIR_FILE" ]
then
    rmdir=$(cat "$DIR_FILE")
else
    # check if relative path creation is possible and confirmed by user
    cwd="." # current directory in which we search for the DIR_FILE file
    for (( i=1; i<=$MAX_LEVEL; i++ ))
    do
        cwd="$cwd/.."
        echo $(( $i/$MAX_LEVEL * 100 ))
        echo "# Suche nach \"$DIR_FILE\" Datei"

        [ -f "$cwd/$IGNORE_FILE" ] && pwd_ignore=$(basename "$(realpath ${cwd%/..})")
        if [ -f "$cwd/$DIR_FILE" ]
        then
            pwd_diff="${PWD#$(realpath $cwd)}"
            rmdir="$(cat $cwd/$DIR_FILE)$pwd_diff"
            # todo fix possible prefix error
            [ -n "$pwd_ignore" ] && rmdir="${rmdir%%/$pwd_ignore*}" \
            || { ! $(zenity --question --title "Relative Pfad" --ellipsize --text "Keine \"$DIR_FILE\" Datei im aktuellen Verzeichnis gefunden.\n\nRelativ ermittelten Pfad \"$rmdir\" verwenden?") && unset rmdir; }
            echo 100
            break
        fi
    done | zenity --progress --auto-close --title "Suche in Unterverzeichnissen nach \".rmdir\""
    
    # get custom user input path
    if [ -z "$rmdir" ]
    then
        ! rmdir=$(zenity --forms --add-entry "Ordner auf reMarkable:" --title "$title" --text "Gib den Ordner auf dem reMarkable an") && exit

        # and maybe save it
        if zenity --question --text="Auswahl fÃ¼r den aktuellen Ordner speichern?"
        then
            echo "$rmdir" > "$DIR_FILE"
        fi
    fi
fi

# upload files

# simulate rmapi mkdir -p $rmdir
traversed=""
IFS="/"
for i in ${rmdir#/}
do
	traversed="$traversed/$i"
	rmapi mkdir "$traversed"
done



IFS=$'\n'
for file in $SELECTED_FILE_PATHS
do
    echo "Hochladen von $file"
    rmapi put "$file" "$rmdir"
    echo
done 2>&1 | zenity --text-info --title "$TITLE"
